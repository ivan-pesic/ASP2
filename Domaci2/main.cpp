#include "Tree.h"

int main() {

	Tree234 tree;

	while (true) {
		int ans = menu();
		switch (ans) {
		case 1: {
			cout << "1. Formiranje stabla iz datoteke." << endl
				<< "Uneti ime datoteke: ";
			string name;
			cin >> name;
			ifstream file;
			file.open(name);
			insertFromFile(file, tree);
			file.close();
		}
			break;
		case 2: {
			cout << "2. Pretrazivanje stabla po prioritetu akcije." << endl
				<< "Uneti prioritet akcije: ";
			int prio;
			cin >> prio;
			Action* action = tree.searchByPriority(prio);
			if (action)
				cout << *action;
			else
				cout << "Nema trazene akcije.";
		}
			break;
		case 3: {
			cout << "3. Umetanje nove akcije u stablo" << endl
				<< "Uneti ime akcije i njen prioritet: ";
			Action* action;
			cin.ignore();
			readAction(action, cin);
			tree.insertAction(action);
		}
			break;
		case 4: {
			cout << "4. Brisanje proizvoljne akcije po prioritetu." << endl
				<< "Uneti prioritet akcije koju zelite izbrisati: ";
			int prio;
			cin >> prio;
			tree.deleteByPriority(prio);
		}
			break;
		case 5: {
			cout << "5. Brisanje akcije najviseg prioriteta." << endl;
			tree.deleteMaxPriority();
		}
			break;
		case 6: {
			cout << "6. Ispisivanje 2-3-4 stabla." << endl;
			cout << tree;//tree.print2_3_4();
		}
			break;
		case 7: {
			cout << "7. Ispisivanje red-black stabla" << endl;
			tree.printRB();
		}
			break;
		case 8: {
			cout << "8. Izmena prioriteta akcije." << endl
				<< "Uneti ime akcije i njen prioritet: ";
			string name;
			int prio;
			cin >> name >> prio;
			tree.changePriority(name, prio);
		}
			break;
		case 9: {
			cout << "9. Pronalazenje ukupnog broja akcija sa zadatim prioritetom." << endl
				<< "Uneti trazeni prioritet: ";
			int prio;
			cin >> prio;
			tree.findNumberOfActions(prio);
		}
			break;
		case 10: {
			return 0;
		}
		}
	}
}

//cout << "*,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,#&&&&&&%%%%%%&@&&&&&&&&&&&&&&&&" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(*,********,*****&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@@ *******,,,*,*/***(**, **, *%, @@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@#*/*******,***,**,,,/,****,*,**@/@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@,%/*********,,,*,,,,/****///****/%@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@#///*/////**,*,***,**/*//////(//*/@#@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@//**///((/////////////////////(//**&#@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@//////((((/////////**********/((/**#*@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@**//((((((////////*********/(//((/*((@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@//(((#(((/(%%&&&%##(/(#%&%%%#((((/@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@#@/(((#(((((#%%&&###%/*/##(#%(#((((/(&*@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@&(((((/(///((///((((((**/((/////*//((*@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@,((((((((//*////////(/**/////**/((//*@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@%(//((##(((/////**((((//(/***//(((/(*@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@/((((((#((((//////((((///////(#//(@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@,((/#((((/////(///////(////((#.@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@@@@(((((////(%&%%%%%%%%(//((%@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@@@@.(#(//(((((((#(##(((((((&*@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@@@@&((#((((((////////////(#%@@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@@@@,((((#####((((((((/(##(@@@@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@@@/*((((((######((#####(/(@@@@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@@/&*,,((((((((((///(((((*/,@#@@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@@@@@ &&#,,,.*(/((((((((((((#(*.(&@@@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@@@@@@/.(#/%%%%,,,,.../((((//((((##../&(&@@@@@@@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@@@@@@@/#%%(,,,,##&&%&/,,,....../((((##*...(%&%(/%#@%@@@@@@@@@@@@@@@@@@" << endl
//	<< ",@@@@@@@@@ %%%%%%%%%(***/#(%%%%%#,,,........*(,.....(%%%&(,,*(&%%%%%%%%%@@@@@@@@" << endl
//	<< ",@@@##%%%%%%%%%%%%%%&/,...,,%%%%%%,,,,.....(,(%#&,..*%%%%%(/&#%#&%%%%%%%%%%%%@@@" << endl
//	<< "%%%%%%%%%%%%%%%%%%%%%###%@(/#&%%&%%..,,../%%##%(#*/..%%%%%/...((&%%%%%%%%%%%%%%&" << endl
//	<< "%%%%%%%%%%%%%%%%%%%%%%&***,#(#%%%%%%,...%&&%%##%/,,*.#%%%%(/****%%%%%%%%%%%%%%%%" << endl
//	<< "%&%%%%%%%%%%%%%%%%%%%%%((.../(&%%%%%#.,,,(&##%%(,,,,,/&%%%&(&@%/%%%%%%%%%%%%%%&%" << endl
//	<< "%%&%%%%%%%%%%%%%%%%&%%%%(*.,*&/&%%%%%%,,,,/%#%/#%(,,,,%%%%&(,./%(%%%&&%%%%%%%&&%" << endl;